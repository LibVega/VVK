/*
 * MIT License - Copyright(c) 2020 Sean Moss
 * This file is subject to the terms and conditions of the MIT License, the text of which can be found in the 'LICENSE'
 * file at the root of this repository, or online at <https://opensource.org/licenses/MIT>.
 */

/// This file was generated by VVKGen. Edits to this file will be lost on next generation.

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;

namespace Vulkan
{

[Flags]
public enum VkFramebufferCreateFlags : uint
{
	NoFlags = 0,
	Imageless = 1,
	ImagelessKhr = 1,
}

[Flags]
public enum VkQueryPoolCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkRenderPassCreateFlags : uint
{
	NoFlags = 0,
	TransformQcom = 2,
}

[Flags]
public enum VkSamplerCreateFlags : uint
{
	NoFlags = 0,
	SubsampledExt = 1,
	SubsampledCoarseReconstructionExt = 2,
}

[Flags]
public enum VkPipelineLayoutCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkPipelineCacheCreateFlags : uint
{
	NoFlags = 0,
	ExternallySynchronizedExt = 1,
}

[Flags]
public enum VkPipelineDepthStencilStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkPipelineDynamicStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkPipelineColorBlendStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkPipelineMultisampleStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkPipelineRasterizationStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkPipelineViewportStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkPipelineTessellationStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkPipelineInputAssemblyStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkPipelineVertexInputStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkPipelineShaderStageCreateFlags : uint
{
	NoFlags = 0,
	AllowVaryingSubgroupSizeExt = 1,
	RequireFullSubgroupsExt = 2,
}

[Flags]
public enum VkDescriptorSetLayoutCreateFlags : uint
{
	NoFlags = 0,
	UpdateAfterBindPool = 2,
	PushDescriptorKhr = 1,
	UpdateAfterBindPoolExt = 2,
}

[Flags]
public enum VkBufferViewCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkInstanceCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkDeviceCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkDeviceQueueCreateFlags : uint
{
	NoFlags = 0,
	Protected = 1,
}

[Flags]
public enum VkQueueFlags : uint
{
	NoFlags = 0,
	Graphics = 1,
	Compute = 2,
	Transfer = 4,
	SparseBinding = 8,
	Protected = 16,
}

[Flags]
public enum VkMemoryPropertyFlags : uint
{
	NoFlags = 0,
	DeviceLocal = 1,
	HostVisible = 2,
	HostCoherent = 4,
	HostCached = 8,
	LazilyAllocated = 16,
	Protected = 32,
	DeviceCoherentAmd = 64,
	DeviceUncachedAmd = 128,
}

[Flags]
public enum VkMemoryHeapFlags : uint
{
	NoFlags = 0,
	DeviceLocal = 1,
	MultiInstance = 2,
	MultiInstanceKhr = 2,
}

[Flags]
public enum VkAccessFlags : uint
{
	NoFlags = 0,
	IndirectCommandRead = 1,
	IndexRead = 2,
	VertexAttributeRead = 4,
	UniformRead = 8,
	InputAttachmentRead = 16,
	ShaderRead = 32,
	ShaderWrite = 64,
	ColorAttachmentRead = 128,
	ColorAttachmentWrite = 256,
	DepthStencilAttachmentRead = 512,
	DepthStencilAttachmentWrite = 1024,
	TransferRead = 2048,
	TransferWrite = 4096,
	HostRead = 8192,
	HostWrite = 16384,
	MemoryRead = 32768,
	MemoryWrite = 65536,
	TransformFeedbackWriteExt = 33554432,
	TransformFeedbackCounterReadExt = 67108864,
	TransformFeedbackCounterWriteExt = 134217728,
	ConditionalRenderingReadExt = 1048576,
	ColorAttachmentReadNoncoherentExt = 524288,
	AccelerationStructureReadKhr = 2097152,
	AccelerationStructureWriteKhr = 4194304,
	ShadingRateImageReadNv = 8388608,
	AccelerationStructureReadNv = 2097152,
	AccelerationStructureWriteNv = 4194304,
	FragmentDensityMapReadExt = 16777216,
	FragmentShadingRateAttachmentReadKhr = 8388608,
	CommandPreprocessReadNv = 131072,
	CommandPreprocessWriteNv = 262144,
}

[Flags]
public enum VkBufferUsageFlags : uint
{
	NoFlags = 0,
	TransferSrc = 1,
	TransferDst = 2,
	UniformTexelBuffer = 4,
	StorageTexelBuffer = 8,
	UniformBuffer = 16,
	StorageBuffer = 32,
	IndexBuffer = 64,
	VertexBuffer = 128,
	IndirectBuffer = 256,
	ShaderDeviceAddress = 131072,
	TransformFeedbackBufferExt = 2048,
	TransformFeedbackCounterBufferExt = 4096,
	ConditionalRenderingExt = 512,
	AccelerationStructureBuildInputReadOnlyKhr = 524288,
	AccelerationStructureStorageKhr = 1048576,
	ShaderBindingTableKhr = 1024,
	RayTracingNv = 1024,
	ShaderDeviceAddressExt = 131072,
	ShaderDeviceAddressKhr = 131072,
}

[Flags]
public enum VkBufferCreateFlags : uint
{
	NoFlags = 0,
	SparseBinding = 1,
	SparseResidency = 2,
	SparseAliased = 4,
	Protected = 8,
	DeviceAddressCaptureReplay = 16,
	DeviceAddressCaptureReplayExt = 16,
	DeviceAddressCaptureReplayKhr = 16,
}

[Flags]
public enum VkShaderStageFlags : uint
{
	NoFlags = 0,
	Vertex = 1,
	TessellationControl = 2,
	TessellationEvaluation = 4,
	Geometry = 8,
	Fragment = 16,
	Compute = 32,
	AllGraphics = 31,
	All = 2147483647,
	RaygenKhr = 256,
	AnyHitKhr = 512,
	ClosestHitKhr = 1024,
	MissKhr = 2048,
	IntersectionKhr = 4096,
	CallableKhr = 8192,
	RaygenNv = 256,
	AnyHitNv = 512,
	ClosestHitNv = 1024,
	MissNv = 2048,
	IntersectionNv = 4096,
	CallableNv = 8192,
	TaskNv = 64,
	MeshNv = 128,
}

[Flags]
public enum VkImageUsageFlags : uint
{
	NoFlags = 0,
	TransferSrc = 1,
	TransferDst = 2,
	Sampled = 4,
	Storage = 8,
	ColorAttachment = 16,
	DepthStencilAttachment = 32,
	TransientAttachment = 64,
	InputAttachment = 128,
	ShadingRateImageNv = 256,
	FragmentDensityMapExt = 512,
	FragmentShadingRateAttachmentKhr = 256,
}

[Flags]
public enum VkImageCreateFlags : uint
{
	NoFlags = 0,
	SparseBinding = 1,
	SparseResidency = 2,
	SparseAliased = 4,
	MutableFormat = 8,
	CubeCompatible = 16,
	Alias = 1024,
	SplitInstanceBindRegions = 64,
	E2DArrayCompatible = 32,
	BlockTexelViewCompatible = 128,
	ExtendedUsage = 256,
	Protected = 2048,
	Disjoint = 512,
	CornerSampledNv = 8192,
	SplitInstanceBindRegionsKhr = 64,
	E2DArrayCompatibleKhr = 32,
	BlockTexelViewCompatibleKhr = 128,
	ExtendedUsageKhr = 256,
	SampleLocationsCompatibleDepthExt = 4096,
	DisjointKhr = 512,
	AliasKhr = 1024,
	SubsampledExt = 16384,
}

[Flags]
public enum VkImageViewCreateFlags : uint
{
	NoFlags = 0,
	FragmentDensityMapDynamicExt = 1,
	FragmentDensityMapDeferredExt = 2,
}

[Flags]
public enum VkPipelineCreateFlags : uint
{
	NoFlags = 0,
	DisableOptimization = 1,
	AllowDerivatives = 2,
	Derivative = 4,
	ViewIndexFromDeviceIndex = 8,
	DispatchBase = 16,
	ViewIndexFromDeviceIndexKhr = 8,
	DispatchBaseKhr = 16,
	RayTracingNoNullAnyHitShadersKhr = 16384,
	RayTracingNoNullClosestHitShadersKhr = 32768,
	RayTracingNoNullMissShadersKhr = 65536,
	RayTracingNoNullIntersectionShadersKhr = 131072,
	RayTracingSkipTrianglesKhr = 4096,
	RayTracingSkipAabbsKhr = 8192,
	RayTracingShaderGroupHandleCaptureReplayKhr = 524288,
	DeferCompileNv = 32,
	CaptureStatisticsKhr = 64,
	CaptureInternalRepresentationsKhr = 128,
	IndirectBindableNv = 262144,
	LibraryKhr = 2048,
	FailOnPipelineCompileRequiredExt = 256,
	EarlyReturnOnFailureExt = 512,
}

[Flags]
public enum VkColorComponentFlags : uint
{
	NoFlags = 0,
	R = 1,
	G = 2,
	B = 4,
	A = 8,
}

[Flags]
public enum VkFenceCreateFlags : uint
{
	NoFlags = 0,
	Signaled = 1,
}

[Flags]
public enum VkSemaphoreCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkFormatFeatureFlags : uint
{
	NoFlags = 0,
	SampledImage = 1,
	StorageImage = 2,
	StorageImageAtomic = 4,
	UniformTexelBuffer = 8,
	StorageTexelBuffer = 16,
	StorageTexelBufferAtomic = 32,
	VertexBuffer = 64,
	ColorAttachment = 128,
	ColorAttachmentBlend = 256,
	DepthStencilAttachment = 512,
	BlitSrc = 1024,
	BlitDst = 2048,
	SampledImageFilterLinear = 4096,
	TransferSrc = 16384,
	TransferDst = 32768,
	MidpointChromaSamples = 131072,
	SampledImageYcbcrConversionLinearFilter = 262144,
	SampledImageYcbcrConversionSeparateReconstructionFilter = 524288,
	SampledImageYcbcrConversionChromaReconstructionExplicit = 1048576,
	SampledImageYcbcrConversionChromaReconstructionExplicitForceable = 2097152,
	Disjoint = 4194304,
	CositedChromaSamples = 8388608,
	SampledImageFilterMinmax = 65536,
	SampledImageFilterCubicImg = 8192,
	TransferSrcKhr = 16384,
	TransferDstKhr = 32768,
	SampledImageFilterMinmaxExt = 65536,
	AccelerationStructureVertexBufferKhr = 536870912,
	MidpointChromaSamplesKhr = 131072,
	SampledImageYcbcrConversionLinearFilterKhr = 262144,
	SampledImageYcbcrConversionSeparateReconstructionFilterKhr = 524288,
	SampledImageYcbcrConversionChromaReconstructionExplicitKhr = 1048576,
	SampledImageYcbcrConversionChromaReconstructionExplicitForceableKhr = 2097152,
	DisjointKhr = 4194304,
	CositedChromaSamplesKhr = 8388608,
	SampledImageFilterCubicExt = 8192,
	FragmentDensityMapExt = 16777216,
	FragmentShadingRateAttachmentKhr = 1073741824,
}

[Flags]
public enum VkQueryControlFlags : uint
{
	NoFlags = 0,
	Precise = 1,
}

[Flags]
public enum VkQueryResultFlags : uint
{
	NoFlags = 0,
	E64 = 1,
	Wait = 2,
	WithAvailability = 4,
	Partial = 8,
}

[Flags]
public enum VkShaderModuleCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkEventCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkCommandPoolCreateFlags : uint
{
	NoFlags = 0,
	Transient = 1,
	ResetCommandBuffer = 2,
	Protected = 4,
}

[Flags]
public enum VkCommandPoolResetFlags : uint
{
	NoFlags = 0,
	ReleaseResources = 1,
}

[Flags]
public enum VkCommandBufferResetFlags : uint
{
	NoFlags = 0,
	ReleaseResources = 1,
}

[Flags]
public enum VkCommandBufferUsageFlags : uint
{
	NoFlags = 0,
	OneTimeSubmit = 1,
	RenderPassContinue = 2,
	SimultaneousUse = 4,
}

[Flags]
public enum VkQueryPipelineStatisticFlags : uint
{
	NoFlags = 0,
	InputAssemblyVertices = 1,
	InputAssemblyPrimitives = 2,
	VertexShaderInvocations = 4,
	GeometryShaderInvocations = 8,
	GeometryShaderPrimitives = 16,
	ClippingInvocations = 32,
	ClippingPrimitives = 64,
	FragmentShaderInvocations = 128,
	TessellationControlShaderPatches = 256,
	TessellationEvaluationShaderInvocations = 512,
	ComputeShaderInvocations = 1024,
}

[Flags]
public enum VkMemoryMapFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkImageAspectFlags : uint
{
	NoFlags = 0,
	Color = 1,
	Depth = 2,
	Stencil = 4,
	Metadata = 8,
	Plane0 = 16,
	Plane1 = 32,
	Plane2 = 64,
	Plane0Khr = 16,
	Plane1Khr = 32,
	Plane2Khr = 64,
	MemoryPlane0Ext = 128,
	MemoryPlane1Ext = 256,
	MemoryPlane2Ext = 512,
	MemoryPlane3Ext = 1024,
}

[Flags]
public enum VkSparseMemoryBindFlags : uint
{
	NoFlags = 0,
	Metadata = 1,
}

[Flags]
public enum VkSparseImageFormatFlags : uint
{
	NoFlags = 0,
	SingleMiptail = 1,
	AlignedMipSize = 2,
	NonstandardBlockSize = 4,
}

[Flags]
public enum VkSubpassDescriptionFlags : uint
{
	NoFlags = 0,
	PerViewAttributesNvx = 1,
	PerViewPositionXOnlyNvx = 2,
	FragmentRegionQcom = 4,
	ShaderResolveQcom = 8,
}

[Flags]
public enum VkPipelineStageFlags : uint
{
	NoFlags = 0,
	TopOfPipe = 1,
	DrawIndirect = 2,
	VertexInput = 4,
	VertexShader = 8,
	TessellationControlShader = 16,
	TessellationEvaluationShader = 32,
	GeometryShader = 64,
	FragmentShader = 128,
	EarlyFragmentTests = 256,
	LateFragmentTests = 512,
	ColorAttachmentOutput = 1024,
	ComputeShader = 2048,
	Transfer = 4096,
	BottomOfPipe = 8192,
	Host = 16384,
	AllGraphics = 32768,
	AllCommands = 65536,
	TransformFeedbackExt = 16777216,
	ConditionalRenderingExt = 262144,
	AccelerationStructureBuildKhr = 33554432,
	RayTracingShaderKhr = 2097152,
	ShadingRateImageNv = 4194304,
	RayTracingShaderNv = 2097152,
	AccelerationStructureBuildNv = 33554432,
	TaskShaderNv = 524288,
	MeshShaderNv = 1048576,
	FragmentDensityProcessExt = 8388608,
	FragmentShadingRateAttachmentKhr = 4194304,
	CommandPreprocessNv = 131072,
}

[Flags]
public enum VkSampleCountFlags : uint
{
	NoFlags = 0,
	E1 = 1,
	E2 = 2,
	E4 = 4,
	E8 = 8,
	E16 = 16,
	E32 = 32,
	E64 = 64,
}

[Flags]
public enum VkAttachmentDescriptionFlags : uint
{
	NoFlags = 0,
	MayAlias = 1,
}

[Flags]
public enum VkStencilFaceFlags : uint
{
	NoFlags = 0,
	Front = 1,
	Back = 2,
	FrontAndBack = 3,
	AndBack = 3,
}

[Flags]
public enum VkCullModeFlags : uint
{
	NoFlags = 0,
	None = 0,
	Front = 1,
	Back = 2,
	FrontAndBack = 3,
}

[Flags]
public enum VkDescriptorPoolCreateFlags : uint
{
	NoFlags = 0,
	FreeDescriptorSet = 1,
	UpdateAfterBind = 2,
	UpdateAfterBindExt = 2,
}

[Flags]
public enum VkDescriptorPoolResetFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkDependencyFlags : uint
{
	NoFlags = 0,
	ByRegion = 1,
	DeviceGroup = 4,
	ViewLocal = 2,
	ViewLocalKhr = 2,
	DeviceGroupKhr = 4,
}

[Flags]
public enum VkSubgroupFeatureFlags : uint
{
	NoFlags = 0,
	Basic = 1,
	Vote = 2,
	Arithmetic = 4,
	Ballot = 8,
	Shuffle = 16,
	ShuffleRelative = 32,
	Clustered = 64,
	Quad = 128,
	PartitionedNv = 256,
}

[Flags]
public enum VkDescriptorUpdateTemplateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkSemaphoreWaitFlags : uint
{
	NoFlags = 0,
	Any = 1,
	AnyKhr = 1,
}

[Flags]
public enum VkPeerMemoryFeatureFlags : uint
{
	NoFlags = 0,
	CopySrc = 1,
	CopyDst = 2,
	GenericSrc = 4,
	GenericDst = 8,
	CopySrcKhr = 1,
	CopyDstKhr = 2,
	GenericSrcKhr = 4,
	GenericDstKhr = 8,
}

[Flags]
public enum VkMemoryAllocateFlags : uint
{
	NoFlags = 0,
	DeviceMask = 1,
	DeviceAddress = 2,
	DeviceAddressCaptureReplay = 4,
	DeviceMaskKhr = 1,
	DeviceAddressKhr = 2,
	DeviceAddressCaptureReplayKhr = 4,
}

[Flags]
public enum VkCommandPoolTrimFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum VkExternalMemoryHandleTypeFlags : uint
{
	NoFlags = 0,
	OpaqueFd = 1,
	OpaqueWin32 = 2,
	OpaqueWin32Kmt = 4,
	D3d11Texture = 8,
	D3d11TextureKmt = 16,
	D3d12Heap = 32,
	D3d12Resource = 64,
	OpaqueFdKhr = 1,
	OpaqueWin32Khr = 2,
	OpaqueWin32KmtKhr = 4,
	D3d11TextureKhr = 8,
	D3d11TextureKmtKhr = 16,
	D3d12HeapKhr = 32,
	D3d12ResourceKhr = 64,
	DmaBufExt = 512,
	AndroidHardwareBufferAndroid = 1024,
	HostAllocationExt = 128,
	HostMappedForeignMemoryExt = 256,
}

[Flags]
public enum VkExternalMemoryFeatureFlags : uint
{
	NoFlags = 0,
	DedicatedOnly = 1,
	Exportable = 2,
	Importable = 4,
	DedicatedOnlyKhr = 1,
	ExportableKhr = 2,
	ImportableKhr = 4,
}

[Flags]
public enum VkExternalSemaphoreHandleTypeFlags : uint
{
	NoFlags = 0,
	OpaqueFd = 1,
	OpaqueWin32 = 2,
	OpaqueWin32Kmt = 4,
	D3d12Fence = 8,
	D3d11Fence = 8,
	SyncFd = 16,
	OpaqueFdKhr = 1,
	OpaqueWin32Khr = 2,
	OpaqueWin32KmtKhr = 4,
	D3d12FenceKhr = 8,
	SyncFdKhr = 16,
}

[Flags]
public enum VkExternalSemaphoreFeatureFlags : uint
{
	NoFlags = 0,
	Exportable = 1,
	Importable = 2,
	ExportableKhr = 1,
	ImportableKhr = 2,
}

[Flags]
public enum VkSemaphoreImportFlags : uint
{
	NoFlags = 0,
	Temporary = 1,
	TemporaryKhr = 1,
}

[Flags]
public enum VkExternalFenceHandleTypeFlags : uint
{
	NoFlags = 0,
	OpaqueFd = 1,
	OpaqueWin32 = 2,
	OpaqueWin32Kmt = 4,
	SyncFd = 8,
	OpaqueFdKhr = 1,
	OpaqueWin32Khr = 2,
	OpaqueWin32KmtKhr = 4,
	SyncFdKhr = 8,
}

[Flags]
public enum VkExternalFenceFeatureFlags : uint
{
	NoFlags = 0,
	Exportable = 1,
	Importable = 2,
	ExportableKhr = 1,
	ImportableKhr = 2,
}

[Flags]
public enum VkFenceImportFlags : uint
{
	NoFlags = 0,
	Temporary = 1,
	TemporaryKhr = 1,
}

[Flags]
public enum VkDescriptorBindingFlags : uint
{
	NoFlags = 0,
	UpdateAfterBind = 1,
	UpdateUnusedWhilePending = 2,
	PartiallyBound = 4,
	VariableDescriptorCount = 8,
	UpdateAfterBindExt = 1,
	UpdateUnusedWhilePendingExt = 2,
	PartiallyBoundExt = 4,
	VariableDescriptorCountExt = 8,
}

[Flags]
public enum VkResolveModeFlags : uint
{
	NoFlags = 0,
	None = 0,
	SampleZero = 1,
	Average = 2,
	Min = 4,
	Max = 8,
	NoneKhr = 0,
	SampleZeroKhr = 1,
	AverageKhr = 2,
	MinKhr = 4,
	MaxKhr = 8,
}


} // namespace Vulkan

