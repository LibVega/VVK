/*
 * MIT License - Copyright(c) 2020 Sean Moss
 * This file is subject to the terms and conditions of the MIT License, the text of which can be found in the 'LICENSE'
 * file at the root of this repository, or online at<https://opensource.org/licenses/MIT>.
 */

/// This file was generated by VVKGen. Edits to this file will be lost on next generation.

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;


namespace Vk.MVK
{

[StructLayout(LayoutKind.Sequential)]
public unsafe partial struct IOSSurfaceCreateInfo
{
	public const Vk.StructureType TYPE = Vk.StructureType.IosSurfaceCreateInfoMVK;

	public Vk.StructureType sType;
	public void* pNext;
	public Vk.MVK.IOSSurfaceCreateFlags Flags;
	public void* View;

	/// <summary>Creates a new IOSSurfaceCreateInfo value with the correct type field.</summary>
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static void New(out IOSSurfaceCreateInfo value) => value = new() { sType = TYPE };
	/// <summary>Initializes the sType and pNext fields to the correct default values.</summary>
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static void Init(ref IOSSurfaceCreateInfo value) { value.sType = TYPE; value.pNext = null; }
}

[StructLayout(LayoutKind.Sequential)]
public unsafe partial struct MacOSSurfaceCreateInfo
{
	public const Vk.StructureType TYPE = Vk.StructureType.MacosSurfaceCreateInfoMVK;

	public Vk.StructureType sType;
	public void* pNext;
	public Vk.MVK.MacOSSurfaceCreateFlags Flags;
	public void* View;

	/// <summary>Creates a new MacOSSurfaceCreateInfo value with the correct type field.</summary>
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static void New(out MacOSSurfaceCreateInfo value) => value = new() { sType = TYPE };
	/// <summary>Initializes the sType and pNext fields to the correct default values.</summary>
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static void Init(ref MacOSSurfaceCreateInfo value) { value.sType = TYPE; value.pNext = null; }
}

} // namespace Vk.MVK
