/*
 * MIT License - Copyright(c) 2020 Sean Moss
 * This file is subject to the terms and conditions of the MIT License, the text of which can be found in the 'LICENSE'
 * file at the root of this repository, or online at<https://opensource.org/licenses/MIT>.
 */

/// This file was generated by VVKGen. Edits to this file will be lost on next generation.

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;


namespace Vk.NV
{

[Flags]
public enum IndirectCommandsLayoutUsageFlags : uint
{
	ExplicitPreprocessNV = 1,
	IndexedSequencesNV = 2,
	UnorderedSequencesNV = 4,
	NoFlags = 0,
}

[Flags]
public enum IndirectStateFlags : uint
{
	FlagFrontfaceNV = 1,
	NoFlags = 0,
}

[Flags]
public enum GeometryFlags : uint
{
	OpaqueKHR = 1,
	NoDuplicateAnyHitInvocationKHR = 2,
	OpaqueNV = 1,
	NoDuplicateAnyHitInvocationNV = 2,
	NoFlags = 0,
}

[Flags]
public enum GeometryInstanceFlags : uint
{
	TriangleFacingCullDisableKHR = 1,
	TriangleFrontCounterclockwiseKHR = 2,
	ForceOpaqueKHR = 4,
	ForceNoOpaqueKHR = 8,
	TriangleCullDisableNV = 1,
	TriangleFrontCounterclockwiseNV = 2,
	ForceOpaqueNV = 4,
	ForceNoOpaqueNV = 8,
	NoFlags = 0,
}

[Flags]
public enum BuildAccelerationStructureFlags : uint
{
	AllowUpdateKHR = 1,
	AllowCompactionKHR = 2,
	PreferFastTraceKHR = 4,
	PreferFastBuildKHR = 8,
	LowMemoryKHR = 16,
	AllowUpdateNV = 1,
	AllowCompactionNV = 2,
	PreferFastTraceNV = 4,
	PreferFastBuildNV = 8,
	LowMemoryNV = 16,
	NoFlags = 0,
}

[Flags]
public enum DeviceDiagnosticsConfigFlags : uint
{
	EnableShaderDebugInfoNV = 1,
	EnableResourceTrackingNV = 2,
	EnableAutomaticCheckpointsNV = 4,
	NoFlags = 0,
}

[Flags]
public enum ExternalMemoryHandleTypeFlags : uint
{
	OpaqueWin32NV = 1,
	OpaqueWin32KmtNV = 2,
	D3d11ImageNV = 4,
	D3d11ImageKmtNV = 8,
	NoFlags = 0,
}

[Flags]
public enum ExternalMemoryFeatureFlags : uint
{
	DedicatedOnlyNV = 1,
	ExportableNV = 2,
	ImportableNV = 4,
	NoFlags = 0,
}

[Flags]
public enum PipelineViewportSwizzleStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum PipelineCoverageToColorStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum PipelineCoverageModulationStateCreateFlags : uint
{
	NoFlags = 0,
}

[Flags]
public enum PipelineCoverageReductionStateCreateFlags : uint
{
	NoFlags = 0,
}

public enum IndirectCommandsTokenType : int
{
	ShaderGroupNV = 0,
	StateFlagsNV = 1,
	IndexBufferNV = 2,
	VertexBufferNV = 3,
	PushConstantNV = 4,
	DrawIndexedNV = 5,
	DrawNV = 6,
	DrawTasksNV = 7,
}

public enum ViewportCoordinateSwizzle : int
{
	PositiveXNV = 0,
	NegativeXNV = 1,
	PositiveYNV = 2,
	NegativeYNV = 3,
	PositiveZNV = 4,
	NegativeZNV = 5,
	PositiveWNV = 6,
	NegativeWNV = 7,
}

public enum CoverageModulationMode : int
{
	NoneNV = 0,
	RgbNV = 1,
	AlphaNV = 2,
	RgbaNV = 3,
}

public enum CoverageReductionMode : int
{
	MergeNV = 0,
	TruncateNV = 1,
}

public enum CopyAccelerationStructureMode : int
{
	CloneKHR = 0,
	CompactKHR = 1,
	SerializeKHR = 2,
	DeserializeKHR = 3,
	CloneNV = 0,
	CompactNV = 1,
}

public enum AccelerationStructureType : int
{
	TopLevelKHR = 0,
	BottomLevelKHR = 1,
	TopLevelNV = 0,
	BottomLevelNV = 1,
}

public enum GeometryType : int
{
	TrianglesKHR = 0,
	AabbsKHR = 1,
	InstancesKHR = 1000150000,
	TrianglesNV = 0,
	AabbsNV = 1,
}

public enum RayTracingShaderGroupType : int
{
	GeneralKHR = 0,
	TrianglesHitGroupKHR = 1,
	ProceduralHitGroupKHR = 2,
	GeneralNV = 0,
	TrianglesHitGroupNV = 1,
	ProceduralHitGroupNV = 2,
}

public enum AccelerationStructureMemoryRequirementsType : int
{
	ObjectKHR = 0,
	BuildScratchKHR = 1,
	UpdateScratchKHR = 2,
	ObjectNV = 0,
	BuildScratchNV = 1,
	UpdateScratchNV = 2,
}

public enum Scope : int
{
	DeviceNV = 1,
	WorkgroupNV = 2,
	SubgroupNV = 3,
	QueueFamilyNV = 5,
}

public enum ComponentType : int
{
	Float16NV = 0,
	Float32NV = 1,
	Float64NV = 2,
	Sint8NV = 3,
	Sint16NV = 4,
	Sint32NV = 5,
	Sint64NV = 6,
	Uint8NV = 7,
	Uint16NV = 8,
	Uint32NV = 9,
	Uint64NV = 10,
}

public enum ShadingRatePaletteEntry : int
{
	NoInvocationsNV = 0,
	E16InvocationsPerPixelNV = 1,
	E8InvocationsPerPixelNV = 2,
	E4InvocationsPerPixelNV = 3,
	E2InvocationsPerPixelNV = 4,
	E1InvocationPerPixelNV = 5,
	E1InvocationPer2X1PixelsNV = 6,
	E1InvocationPer1X2PixelsNV = 7,
	E1InvocationPer2X2PixelsNV = 8,
	E1InvocationPer4X2PixelsNV = 9,
	E1InvocationPer2X4PixelsNV = 10,
	E1InvocationPer4X4PixelsNV = 11,
}

public enum CoarseSampleOrderType : int
{
	DefaultNV = 0,
	CustomNV = 1,
	PixelMajorNV = 2,
	SampleMajorNV = 3,
}

} // namespace Vk.NV
