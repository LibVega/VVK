/*
 * MIT License - Copyright(c) 2020 Sean Moss
 * This file is subject to the terms and conditions of the MIT License, the text of which can be found in the 'LICENSE'
 * file at the root of this repository, or online at<https://opensource.org/licenses/MIT>.
 */

/// This file was generated by VVKGen. Edits to this file will be lost on next generation.

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;


namespace VVK
{

public unsafe sealed partial class VulkanInstance : IDisposable
{
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static VulkanResult CreateInstance(Vk.InstanceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.Instance* pInstance)
		=> new(Vk.InstanceFunctionTable.vkCreateInstance(pCreateInfo, pAllocator, pInstance), "vkCreateInstance");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static delegate* unmanaged<void> GetDeviceProcAddr(Vk.Device device, byte* pName)
		=> Vk.InstanceFunctionTable.vkGetDeviceProcAddr(device, pName);

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static delegate* unmanaged<void> GetInstanceProcAddr(Vk.Instance instance, byte* pName)
		=> Vk.InstanceFunctionTable.vkGetInstanceProcAddr(instance, pName);

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static VulkanResult EnumerateInstanceVersion(uint* pApiVersion)
		=> new(Vk.InstanceFunctionTable.vkEnumerateInstanceVersion(pApiVersion), "vkEnumerateInstanceVersion");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static VulkanResult EnumerateInstanceLayerProperties(uint* pPropertyCount, Vk.LayerProperties* pProperties)
		=> new(Vk.InstanceFunctionTable.vkEnumerateInstanceLayerProperties(pPropertyCount, pProperties), "vkEnumerateInstanceLayerProperties");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static VulkanResult EnumerateInstanceExtensionProperties(byte* pLayerName, uint* pPropertyCount, Vk.ExtensionProperties* pProperties)
		=> new(Vk.InstanceFunctionTable.vkEnumerateInstanceExtensionProperties(pLayerName, pPropertyCount, pProperties), "vkEnumerateInstanceExtensionProperties");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public void DestroyInstance(Vk.AllocationCallbacks* pAllocator)
		=> Functions.vkDestroyInstance(Handle, pAllocator);

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult EnumeratePhysicalDevices(uint* pPhysicalDeviceCount, Vk.PhysicalDevice* pPhysicalDevices)
		=> new(Functions.vkEnumeratePhysicalDevices(Handle, pPhysicalDeviceCount, pPhysicalDevices), "vkEnumeratePhysicalDevices");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateAndroidSurfaceKHR(Vk.KHR.AndroidSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateAndroidSurfaceKHR(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateAndroidSurfaceKHR");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateDisplayPlaneSurfaceKHR(Vk.KHR.DisplaySurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateDisplayPlaneSurfaceKHR(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateDisplayPlaneSurfaceKHR");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public void DestroySurfaceKHR(Vk.KHR.Surface surface, Vk.AllocationCallbacks* pAllocator)
		=> Functions.vkDestroySurfaceKHR(Handle, surface, pAllocator);

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateViSurfaceNN(Vk.NN.ViSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateViSurfaceNN(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateViSurfaceNN");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateWaylandSurfaceKHR(Vk.KHR.WaylandSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateWaylandSurfaceKHR(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateWaylandSurfaceKHR");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateWin32SurfaceKHR(Vk.KHR.Win32SurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateWin32SurfaceKHR(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateWin32SurfaceKHR");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateXlibSurfaceKHR(Vk.KHR.XlibSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateXlibSurfaceKHR(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateXlibSurfaceKHR");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateXcbSurfaceKHR(Vk.KHR.XcbSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateXcbSurfaceKHR(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateXcbSurfaceKHR");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateDirectFBSurfaceEXT(Vk.EXT.DirectFBSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateDirectFBSurfaceEXT(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateDirectFBSurfaceEXT");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateImagePipeSurfaceFUCHSIA(Vk.FUCHSIA.ImagePipeSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateImagePipeSurfaceFUCHSIA(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateImagePipeSurfaceFUCHSIA");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateStreamDescriptorSurfaceGGP(Vk.GGP.StreamDescriptorSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateStreamDescriptorSurfaceGGP(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateStreamDescriptorSurfaceGGP");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateDebugReportCallbackEXT(Vk.EXT.DebugReportCallbackCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.EXT.DebugReportCallback* pCallback)
		=> new(Functions.vkCreateDebugReportCallbackEXT(Handle, pCreateInfo, pAllocator, pCallback), "vkCreateDebugReportCallbackEXT");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public void DestroyDebugReportCallbackEXT(Vk.EXT.DebugReportCallback callback, Vk.AllocationCallbacks* pAllocator)
		=> Functions.vkDestroyDebugReportCallbackEXT(Handle, callback, pAllocator);

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public void DebugReportMessageEXT(Vk.EXT.DebugReportFlags flags, Vk.EXT.DebugReportObjectType objectType, ulong @object, ulong location, int messageCode, byte* pLayerPrefix, byte* pMessage)
		=> Functions.vkDebugReportMessageEXT(Handle, flags, objectType, @object, location, messageCode, pLayerPrefix, pMessage);

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult EnumeratePhysicalDeviceGroups(uint* pPhysicalDeviceGroupCount, Vk.PhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties)
		=> new(Functions.vkEnumeratePhysicalDeviceGroups(Handle, pPhysicalDeviceGroupCount, pPhysicalDeviceGroupProperties), "vkEnumeratePhysicalDeviceGroups");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult EnumeratePhysicalDeviceGroupsKHR(uint* pPhysicalDeviceGroupCount, Vk.PhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties)
		=> new(Functions.vkEnumeratePhysicalDeviceGroupsKHR(Handle, pPhysicalDeviceGroupCount, pPhysicalDeviceGroupProperties), "vkEnumeratePhysicalDeviceGroupsKHR");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateIOSSurfaceMVK(Vk.MVK.IOSSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateIOSSurfaceMVK(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateIOSSurfaceMVK");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateMacOSSurfaceMVK(Vk.MVK.MacOSSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateMacOSSurfaceMVK(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateMacOSSurfaceMVK");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateMetalSurfaceEXT(Vk.EXT.MetalSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateMetalSurfaceEXT(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateMetalSurfaceEXT");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateDebugUtilsMessengerEXT(Vk.EXT.DebugUtilsMessengerCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.EXT.DebugUtilsMessenger* pMessenger)
		=> new(Functions.vkCreateDebugUtilsMessengerEXT(Handle, pCreateInfo, pAllocator, pMessenger), "vkCreateDebugUtilsMessengerEXT");

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public void DestroyDebugUtilsMessengerEXT(Vk.EXT.DebugUtilsMessenger messenger, Vk.AllocationCallbacks* pAllocator)
		=> Functions.vkDestroyDebugUtilsMessengerEXT(Handle, messenger, pAllocator);

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public void SubmitDebugUtilsMessageEXT(Vk.EXT.DebugUtilsMessageSeverityFlags messageSeverity, Vk.EXT.DebugUtilsMessageTypeFlags messageTypes, Vk.EXT.DebugUtilsMessengerCallbackData* pCallbackData)
		=> Functions.vkSubmitDebugUtilsMessageEXT(Handle, messageSeverity, messageTypes, pCallbackData);

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public VulkanResult CreateHeadlessSurfaceEXT(Vk.EXT.HeadlessSurfaceCreateInfo* pCreateInfo, Vk.AllocationCallbacks* pAllocator, Vk.KHR.Surface* pSurface)
		=> new(Functions.vkCreateHeadlessSurfaceEXT(Handle, pCreateInfo, pAllocator, pSurface), "vkCreateHeadlessSurfaceEXT");

}

} // namespace VVK
